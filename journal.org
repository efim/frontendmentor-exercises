#+title: Readme
* https://www.frontendmentor.io

with tasks filter:
https://www.frontendmentor.io/challenges?sort=difficulty|asc&difficulties=2&types=free-plus,free&hideCompleted=true

site with projects to practice front end dev,
let's try this out
* deploying into cloud flare
https://dash.cloudflare.com
* dev thigngs
file:///home/enefedov/Documents/personal/frontendmentor/
link to open designs in firefox
* getting svg
https://laminar.dev/documentation#parsing-html-or-svg-strings-into-elements

* 11:58 debug to show all boxes \ outline of div elements:
https://stackoverflow.com/questions/38591246/is-there-a-way-to-see-the-borders-around-all-div-tags-on-a-web-page/38591324#38591324
#+begin_src css
div {
    outline: 1px solid red;
}
#+end_src
* starting a second task:
https://www.frontendmentor.io/challenges/product-preview-card-component-GO7UmttRfa/hub
* and picking the colors!
enefedov@enefedov-ubuntu:~$ nix run nixpkgs#gpick
* exercise 2. product card
* task 3 - question & interacting
https://www.frontendmentor.io/challenges/interactive-rating-component-koxpeBUmI
https://www.frontendmentor.io/challenges/interactive-rating-component-koxpeBUmI/hub
* here's snippet for attribution
#+begin_src scala
  def renderAttribution(): Element = {
    footerTag(
      role := "contentinfo",
      className := "absolute inset-x-0 bottom-2 attribution",
      "Challenge by ",
      a(
        href := "https://www.frontendmentor.io?ref=challenge",
        target := "_blank",
        "Frontend Mentor"
      ),
      " Coded by ",
      a(href := "#", "Your Name Here")
    )
  }
#+end_src
* measuring parts of page - the sizes of elements inside of page or image:
https://firefox-source-docs.mozilla.org/devtools-user/measure_a_portion_of_the_page/index.html

DevTools > Settings > Available tools > Meausre part of page

then ruler appears in the dev tools, yay
* setting page font base size
#+begin_src css
html {
  font-size: 14px;
}
#+end_src
* color tools
https://www.rapidtables.com/convert/color/hsl-to-rgb.html
enefedov@enefedov-ubuntu:~$ nix run nixpkgs#gpick
* here's task 3 solution:
https://www.frontendmentor.io/solutions/responsive-by-tailwindcss-on-vite-with-scalajs-and-laminar-W2wOVlyo6d
* DONE let's fix first 3 tasks. add Landmarks and alternate text to images
* adding accessibility features:
** big level split
https://dequeuniversity.com/rules/axe/4.6/landmark-one-main?application=axeAPI
https://dequeuniversity.com/rules/axe/4.6/page-has-heading-one?application=axeAPI
<header role="banner">
<nav role="navigation">
<main role="main">
<footer role="contentinfo">
** headers support:
https://dequeuniversity.com/rules/axe/4.6/page-has-heading-one?application=axeAPI
use at least one <h1> to mark beginning of content
* using rustywind for my scala files:
and put rustywind binary into /usr/bin

#+begin_src elisp
(defun my/rustywind-in-project-root ()
  (interactive)
  (let ((command (mapconcat 'identity
                            (list "rustywind ."
                                  "--custom-regex"
                                  (shell-quote-argument "className := \"([^\"]+)\"")
                                  "--write") " ")))
    (projectile-run-shell-command-in-root command)
    (revert-buffer t t)))

(add-hook 'after-save-hook #'my/rustywind-in-project-root)
(remove-hook 'after-save-hook #'my/rustywind-in-project-root)
#+end_src
* task 4, yay
https://www.frontendmentor.io/challenges/age-calculator-app-dF9DFFpj-Q
https://www.frontendmentor.io/challenges/age-calculator-app-dF9DFFpj-Q/hub

starting with it.
copying the initted directory, changing names, and unpacking resources.

product-preview-card-component
** now for task 4, how do i arrange subcomponents?
they all should share the Date object, i suppose
three inputs would be in a single component?
they would have their own validation, maybe defined in the top component, where there's Date
and what? how do i connect them to the single model? there's a way surely
* using java.security.UUID in scalajs requires additionad dependency:
https://github.com/scala-js/scala-js/security/advisories/GHSA-j2f9-w8wh-9ww4
Patches

Scala.js v1.10.0 fixes the issue. It uses java.security.SecureRandom to implement randomUUID().

java.security.SecureRandom is not provided by Scala.js core. Therefore, to be able to use randomUUID(), you will need to add a dependency on scalajs-java-securerandom. Failing to do so will result in linking errors (i.e., fastLinkJS/fullLinkJS will fail).

ok, so, i also need to reset date to None when there's error, yuk

libraryDependencies += ("org.scala-js" %%% "scalajs-java-securerandom" % "1.0.0").cross(CrossVersion.for3Use2_13)
* OMG firefox image vertical alignment
There's no built-in way in Firefox (or any browser) to adjust the positioning of an image opened directly in a browser tab. However, you can use a simple JavaScript hack in the browser console to accomplish this:

    Open your browser's console by pressing F12 or Ctrl+Shift+K on your keyboard.

    In the console, paste the following command and hit Enter:

    #+begin_src js
    document.querySelector('img').style.marginTop = "50px";
    #+end_src

Replace "50px" with whatever amount of spacing you'd like.
This command will add a top margin to the image, pushing it down the page.
However, please note that this change is temporary and will not persist when the page is refreshed. If you want a permanent solution, you would need to use CSS in the webpage's code to adjust the image's positioning.
* what i've learned about ValidatedElement
i can bind styles of others to it,
but it doesn't have ".amend", so i could put "validatedElement.el" into the dom, and call ".amend" on it
* starting task 5
https://www.frontendmentor.io/challenges/newsletter-signup-form-with-success-message-3FC1AZbNrv/hub
yay
** so, i need what? boolean for successful submission.
in real world can be filled after receiving 200 from backend.
* and yay, to the even harder task 6
https://www.frontendmentor.io/challenges/interactive-comments-section-iG1RugEG9/hub
** so. let's look at readme and breakdown things to do?
*** reply button that opens form for submitting new comment
with text field and button to submit Reply
*** own comments - no reply, but edit and delete
*** label "you" on own comments
*** all sub-top-level comments are on the 2nd level
so, walk all?
or, top level are comments and others are replies?
ok, yeah, there are two different models. ok, ok.
let's change that.
*** buttons to change rating
*** bottom form to Send new comment
*** prefilling @username when replying
** ok. how should that work though?
should have a component for the comment or reply.

maybe get the subcomponent that displays either, by the shared trait.
and almost everything should be same?

i guess on the backend side it could be Cassandra with messages, and what? stored in same table, with optional fields

the Reply function would be different for Commend and Reply.
or, not too different, but yeah

but that function can be initialized by prent container

the Reply window active state, can be hidden in the same Message Component, and opened when activating Reply.

** DONE ok? let's start with writing a Message component,
it would be able to take in different action based on parent, whether it's CommentReply or ReplyReply,

but lots of common logic:
*** DONE display message, author, score
the position of Reply and Vote elements are totally different on desktop and mobile
for the first time attempting to do with Grid, potentially overcomplicating?
*** CANCELLED where should voting information be stored?
to track what person already voted?
i could disallow re-voting for now,
or just store 2 lists of IDs, who upvoted and who downvoted and allow re-voting
*** DONE functionality for reply (on others)
as separate component, ok
*** DONE checking and displaying if OWN
*** DONE functionality to delete - create modal, and also call function from parent?
https://blog.webdevsimplified.com/2023-04/html-dialog/
let's try to do the dialog
**** done for top level without modal
**** how do i do this with modal?
*** DONE functionality to edit - swap body with form
yeah. let's just do a bit somewhat copy?
it would also always be for own
*** DONE make hover on buttons - making them more white
done in ugly and partial way. inlining svg would allow it to be styled with css?
with ="text-blue-500 fill-current"=?
*** CANCELLED add @tag to the replies display.
you know what! I will not be doing this!
the design also wants me to bug 'at-tag' into response text field, and what am i to do with them?
are they editable?
this is not what I want
*** CANCELLED remove "voting" for own messages
** DONE save state into local storage
let's do it with upickle and json

** DONE component to reply \ send message could be shared?
i guess yeah, passing in function on what to submit and where,
and it could be reused.
** DONE component for Whole Comment with Replies
** DONE component for all comments
** DONE component for whole comment section & submit new top level ui
** DONE text wrap, when word is longer than element width
** DONE submit by ctrl + Enter
** TODO let's style the desktop version
** TODO implement relative time
** TODO for some other time:
*** TODO implement 'at-tag's
**** TODO display in the message body as links,
maybe even go to the place in the page for the thing that got replied to
it can be both Comment and Reply
**** TODO put them into edit box. somehow
and what? are they supposed to be editable?
*** TODO inline svg, check if they can be color-styled
* yay, just another minute of searching, and there's function to translate colors
* using java.time in ScalaJS :
need dependency
https://github.com/cquiroz/scala-java-time
libr
#+begin_src scala
aryDependencies += "io.github.cquiroz" %%% "scala-java-time" % "2.5.0",
#+end_src
* new exciting error:
#+begin_quote
    [error] -- Error: /home/enefedov/Documents/personal/frontendmentor/6-interactive-comment-section/src/main/scala/industries/sunshine/interactivecommentsection/CommentComponent.scala:25:35
[error] 25 |          stateVar.zoom(_.comments.eachWhere(_.message.id == uid))((state, newMessage) => {
[error]    |                                   ^^^^^^^^^
[error]    |Reference to method eachWhere in package com.softwaremill.quicklens should not have survived,
[error]    |it should have been processed and eliminated during expansion of an enclosing macro or term erasure.

#+end_quote

this was because zoom is probably also a macros, and also should just have a getter as first argument
* also, would be better to just split into mapped signal and function that does lense update in the parent
** DONE rewrite message component to 2 functions
** DONE rewrite comment
* usage of dialog in the Laminar:
#+begin_src scala
    val deletionDialog = dialogTag(
      className := "backdrop:bg-black/50",
      form(
        method := "dialog",
        p("Are you sure?"),
        button(
          `type` := "submit", // html logic, will close modal, and not submit form
          onClick --> Observer(_ => onDelete()),
          onClick --> Observer(_ => println("submittign form")),
          "YES, DELETE"
        ),
      )
    )

    div(
      className := "flex flex-row items-center",
      deletionDialog, // put dialog into dom
      button(
        className := "flex flex-row items-center mr-7 text-sm font-bold text-soft-red",
        onClick --> Observer(_ => deletionDialog.ref.showModal()), // acces dom ref, it's already typed. wow
        "Delete"
      ),
    )
#+end_src
* new syntax for bg opacity:
#+begin_src
      className := "backdrop:bg-light-gray/75",
#+end_src
https://tailwindcss.com/docs/background-color#changing-the-opacity
* problem: dialog doesn't close on Escape for some reason
* local storage
https://www.scala-js.org/api/scalajs-dom/0.6/index.html#org.scalajs.dom.WindowLocalStorage
* first big interactions with onMount* things
onMountInsert
onMountCallback

also ctx.thisNode.ref.focus() access

also html "autofocus" attribute, which is not what i want, or, yeah.
exactly what i want!
no, not what I want - when the page loads.
* attempted visibility
#+begin_src scala
            visibility <-- messageSignal.map(msg => if (msg.user != selfUser) "visible" else "collapse"),
#+end_src

but actually in design, you should be able to vote for yourself
* installed webcomponent for relative time, now want a custom tag
https://github.com/github/relative-time-element
#+begin_quote
npm install @github/relative-time-element
#+end_quote
** what i want from tag:
#+begin_src html
<relative-time datetime="2014-04-01T16:30:00-08:00">
  April 1, 2014
</relative-time>
#+end_src

just name and =datetime= attribute
** i created tag and attribute:
  #+begin_src scala
  val relativeTimeTag = htmlTag("relative-time")
  val relTimeDatetime = htmlAttr("datetime", StringAsIsCodec)
  #+end_src

  and then used it:
        #+begin_src scala
        div(
        className := "pl-3 text-light-gray",
        child <-- messageSignal.map(message => {
          val scalaInstant = message.createdAt
          val isoTime =
            java.time.Instant.ofEpochSecond(scalaInstant.getEpochSecond())
          relativeTimeTag(
            scalaInstant.toString().take(10),
            relTimeDatetime := isoTime.toString()
          )
        })
        #+end_src

** and for some reason i needed:
  <!-- TODO i have no idea why code doesn't work without it --
    -- in the console i see 'already-registered' -->
  <script type="module">
    import RelativeTimeElement from '/node_modules/@github/relative-time-element/dist/index.js';
    if (!window.customElements.get('relative-time')) {
      window.customElements.define('relative-time', RelativeTimeElement);
    } else { console.log("already-registered") }
  </script>
